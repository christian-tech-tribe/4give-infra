services:

  load-balancer:
    image: "traefik:v3.0.0"
    restart: always
    command:
      - "--log.level=DEBUG"
      - "--providers.docker.constraints=Label(`docker.project`, `4give`)"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.insecure=true"
      - "--api.dashboard=true"
    ports:
      - "80:80/tcp"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "dev-kit.provided=true"
    deploy:
      replicas: 1

  mongo:
    image: mongo
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASS}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USER}:${MONGO_ROOT_PASS}@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  postgres:
    image: "postgres:13.7"
    restart: always
    env_file:
      - .env
    environment:
    - POSTGRES_USER=${POSTGRES_ROOT_USER}
    - POSTGRES_PASSWORD=${POSTGRES_ROOT_PASS}
    - PGDATA=/data/postgres
    volumes:
    - ./working/postgresql:/data/postgres
    ports:
    - 5432:5432

  4give:
    image: mastrogiovanni/4give-api:v0.0.1
    user: ${MY_UID}:${MY_GID}
    environment:
      - "PORT=3000"
    labels:
      - "docker.project=4give"
      - "traefik.enable=true"
      - "traefik.http.routers.4give.entrypoints=web"
      - "traefik.http.routers.4give.rule=${TRAEFIK_DOMAIN} PathPrefix(`/`)"
      - "traefik.http.services.4give.loadbalancer.server.port=3000"

  4give-api:
    image: mastrogiovanni/4give-api:${VERSION_API}
    env_file:
      - .env
    restart: on-failure
    labels:
      - "docker.project=4give"
      - "traefik.enable=true"
      - "traefik.http.routers.4give-api.entrypoints=web"
      - "traefik.http.routers.4give-api.rule=${TRAEFIK_DOMAIN} PathPrefix(`/api/v1`)"
      - "traefik.http.services.4give-api.loadbalancer.server.port=3000"
    environment:
      - "PORT=3000"
      - "PG_DB_HOST=postgres"
      - "PG_DB_PORT=5432"
      - "PG_DB_USER=${POSTGRES_USER}"
      - "PG_DB_PASS=${POSTGRES_PASS}"
      - "PG_DB_NAME=fourgive"
      - "DOCUMENT_ROOT_DIR=/docs"
      - "SALT_ROUNDS=10"
      - "JWT_EXPIRES_IN=24h"
      - "ADMIN_EMAIL=${DEFAULT_ADMIN_USERNAME}"
      - "JWT_SECRET=${JWT_SECRET}"
      - "DB_PROTOCOL=mongodb"
      - "DB_USER=${MONGO_ROOT_USER}"
      - "DB_PASS=${MONGO_ROOT_PASS}"
      - "DB_NAME=cmcr"
      - "DB_HOST=mongo"
      - "DB_PORT=27017"
    volumes:
      - ./working/docs:/docs
      - .env:/app/.env:ro
    depends_on: 
      - postgres
      - mongo

  documents-serving:
    image: nginx:1.23.4
    restart: always
    user: ${MY_UID}:${MY_GID}
    volumes:
      - "./working/docs:/usr/share/nginx/html/static/documents:ro"
    labels:
      - "docker.project=etaireia"
      - "dev-kit.provided=true"
      - "traefik.enable=true"
      - "traefik.http.routers.documents-serving.entrypoints=web"
      - "traefik.http.routers.documents-serving.rule=PathPrefix(`/static/documents`)"
      - "traefik.http.services.documents-serving.loadbalancer.server.port=80"
    profiles:
      - document

  cheshire-cat-core:
    image: ghcr.io/cheshire-cat-ai/core:latest
    container_name: cheshire_cat_core
    depends_on:
      - cheshire-cat-vector-memory
      - ollama
    environment:
      - PYTHONUNBUFFERED=1
      - WATCHFILES_FORCE_POLLING=true
      - CORE_HOST=${CORE_HOST:-localhost}
      - CORE_PORT=${CORE_PORT:-1865}
      - QDRANT_HOST=${QDRANT_HOST:-cheshire_cat_vector_memory}
      - QDRANT_PORT=${QDRANT_PORT:-6333}
      - CORE_USE_SECURE_PROTOCOLS=${CORE_USE_SECURE_PROTOCOLS:-}
      - API_KEY=${API_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-WARNING}
      - DEBUG=${DEBUG:-true}
      - SAVE_MEMORY_SNAPSHOTS=${SAVE_MEMORY_SNAPSHOTS:-false}
    ports:
      - ${CORE_PORT:-1865}:80
    volumes:
      - ./cat/static:/app/cat/static
      - ./cat/public:/app/cat/public
      - ./cat/plugins:/app/cat/plugins
      - ./cat/metadata.json:/app/metadata.json
    restart: unless-stopped
    profiles:
      - ai

  cheshire-cat-vector-memory:
    image: qdrant/qdrant:latest
    container_name: cheshire_cat_vector_memory
    expose:
      - 6333
    volumes:
      - ./cat/long_term_memory/vector:/qdrant/storage
    restart: unless-stopped
    profiles:
      - ai

  ollama:
    container_name: ollama_cat
    image: ollama/ollama:latest
    volumes:
      - ./ollama:/root/.ollama
    expose:
      - 11434
    environment:
      - gpus=all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    profiles:
      - ai

networks:
  default:
    external: true
    name: cf-net
